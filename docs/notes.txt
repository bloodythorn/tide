Each game must have a
1. Setup
2. n number of moves

http://www.bobnewell.net/nucleus/checkers.php?itemid=289
https://en.wikipedia.org/wiki/Draughts
https://www.chessprogramming.org/Draughts
https://math.stackexchange.com/questions/2240519/how-to-find-the-amount-of-possible-piece-configurations-in-the-game-of-checkers
https://www.reddit.com/r/algorithms/comments/bi20gv/is_the_following_checkers_game_configuration_ever/

 X X X X
X X X X
 X X X X
- - - -
 - - - -
O O O O
 O O O O
O O O O

******

Real Rep:
 1 2 3 4
5 6 7 8
 9 0 1 2
3 4 5 6
 7 8 9 0
1 2 3 4
 5 6 7 8
9 0 1 2

Comp Rep
  00  01  02  03
04  05  06  07
  08  09  10  11
12  13  14  15
  16  17  18  19
20  21  22  23
  24  25  26  27
28  29  30  31

Moves are represented by two numbers:
  Valid Blacks: 1 5  or 7 11
  Valid Reds: 31 26 or 22 17

01234567890123456789012345678901
bbbbbbbbbbbbxxxxxxxxrrrrrrrrrrrr

Player is black   : (m_pl == Player::BLACK)
Player is red     : (m_pl == Player::RED)
Row is RightShift : (((int)(pos / 4) % 2) == 0)
Row is LeftShift  : (((int)(pos / 4) % 2) == 1)
Column 0          : ((pos % COLS) == 0)
Column 3          : ((pos % COLS) == 3)
Row 0             : (row == 0)
Row 7             : (row == 7)


    auto row = static_cast<int>(p_s / COLS);
    if((p_p == Player::BLACK) && (row != 7)) {
      out.push_back(p_s + COLS);
      if((row % 2 == 0) && (p_s % COLS != 3)) {
        out.push_back(p_s + COLS + 1);
      } else
      if((row % 2 == 1) && (p_s % COLS != 0)) {
        out.push_back(p_s + COLS - 1);
      }
    } else
    if ((p_p == Player::RED) && (row != 0)) {
      out.push_back(p_s - COLS);
      if((row % 2 == 0) && (p_s % COLS != 3)) {
        out.push_back(p_s - (COLS + 1));
      } else
      if((row % 2 == 1) && (p_s % COLS != 0)) {
        out.push_back(p_s - (COLS- 1 ));
      }
    }